name: Java CI with Gradle

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: self-hosted

    permissions:
      contents: read

    steps:
    # Step 1: Checkout the repository
    - name: Checkout Code
      uses: actions/checkout@v4

    # Step 2: Set up JDK 21
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    # Step 3: Verify Platform directory contents
    - name: Verify Platform directory contents
      run: ls -R smart-home/Platform

    # Step 4: Set up Gradle Wrapper
    - name: Set up Gradle Wrapper
      run: ./gradlew wrapper
      working-directory: ./smart-home/Platform

    # Step 5: Build the project with Gradle
    - name: Build with Gradle
      run: ./gradlew build
      working-directory: ./smart-home/Platform

    # Step 6: Run tests with Jacoco enabled
    # - name: Run Tests and Generate Jacoco Coverage Report
    #   run: ./gradlew :Platform:test :Platform:jacocoTestReport
    #   working-directory: ./smart-home/Platform

    # Step 7: Upload test report
    - name: Upload Test Report
      if: always() # Ensure this step runs even if tests fail
      uses: actions/upload-artifact@v4
      with:
        name: test-report
        path: smart-home/Platform/build/reports/tests/test/

    # Step 8: Upload Jacoco HTML Report
    - name: Upload Jacoco Report
      if: always() # Ensure this step runs even if tests fail
      uses: actions/upload-artifact@v4
      with:
        name: jacoco-report
        path: smart-home/Platform/build/jacocoHtml/


  # system-test:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Install docker-compose
  #       run: |
  #         sudo apt-get update
  #         sudo apt-get install -y docker-compose


  #     - name: Run docker Compose
  #       working-directory: ./smart-home/Platform
  #       run: docker-compose up -d --build

  #     - name : set up python
  #       uses: actions/setup-python@v4
  #       with:
  #         python-version: '3.7'

  #     - name: Install Python Dependencies
  #       run: pip install pytest requests

  #     - name: Run system tests
  #       working-directory: ./smart-home/Platform/src/test/python
  #       run: pytest

  #     - name: Bring server down
  #       working-directory: ./smart-home/Platform
  #       run: docker-compose down

  deploy:
    #if: ${{ github.event.workflow_run.conclusion == 'success' }} # && github.event.workflow_run.head_branch == 'main' }}
    needs : build
    runs-on: self-hosted
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v1
      
      # - name: Install OpenVPN
      #   run: |
      #     sudo apt-get update
      #     sudo apt-get --assume-yes --no-install-recommends install openvpn unzip
      # - name: Setup VPN config
      #   run: |
      #     wget https://vpn-yeg.cloud.cybera.ca/vpn-yeg-ovpn.zip
      #     unzip vpn-yeg-ovpn.zip
      #     cd vpn-yeg-ovpn
      #     echo "${{ secrets.SECRET_USERNAME_PASSWORD }}" > secret.txt
      #     cat ../.github/vpn/client.conf > client.conf
      #     sudo mv ca.crt client.conf client.crt client.key secret.txt /etc/openvpn/
      #     cd ..
      #     rm -rf vpn-yeg-ovpn
      #     rm vpn-yeg-ovpn.zip
      # - name: Connect VPN
      #   run: sudo systemctl start openvpn@client
      # - name: Sleep for 10 seconds to allow VPN to connect
      #   uses: jakejarvis/wait-action@master
      #   with:
      #     time: '10s'
      - name: Copy Repository onto Cloud
        uses: appleboy/scp-action@master
        env:
          HOST: ${{ secrets.HOST }}
          USERNAME: ${{ secrets.USERNAME }}
          PORT: ${{ secrets.PORT }}
          KEY: ${{ secrets.KEY }}
        with:
          source: "./"
          target: "~/prod"
          HOST: ${{ secrets.HOST }}
          USERNAME: ${{ secrets.USERNAME }}
          PORT: ${{ secrets.PORT }}
          KEY: ${{ secrets.KEY }}

      - name: Restart All Instances on Cloud
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }} 
          port: ${{ secrets.PORT }}
          script: |
            cd ~/prod/smart-home
            chmod +x build-and-run.sh
            ./build-and-run.sh
          # docker-compose down && docker-compose up --build -d

      # - name: Kill VPN connection
      #   if: always()
      #   run: |
      #     sudo systemctl stop openvpn@client
      #     sudo systemctl status openvpn@client | cat
      #     sudo rm -rf /etc/openvpn/


  
